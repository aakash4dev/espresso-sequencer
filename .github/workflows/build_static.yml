name: Static Build
on:
  push:
    branches:
      - main
      - release-*
    tags:
      # YYYYMMDD
      - "20[0-9][0-9][0-1][0-9][0-3][0-9]*"
  schedule:
    - cron: "0 0 * * 1"
  pull_request:
  workflow_dispatch:

jobs:
  static-build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd
          - arm
    steps:
      - name: Prepare AMD
        if: ${{ matrix.arch == 'amd' }}
        run: |
          echo "TARGET=x86_64-unknown-linux-musl" >> $GITHUB_ENV
          echo "DEVSHELL=.#crossShell" >> $GITHUB_ENV

      - name: Prepare ARM
        if: ${{ matrix.arch == 'arm' }}
        run: |
          echo "TARGET=aarch64-unknown-linux-musl" >> $GITHUB_ENV
          echo "DEVSHELL=.#armCrossShell" >> $GITHUB_ENV

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v24

      - uses: cachix/cachix-action@v12
        # If PR is from a non-collaborator (e. g. dependabot) the secrets are missing and the login to cachix fails.
        continue-on-error: true
        with:
          name: espresso-systems-private
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          extraPullNames: nix-community

      - name: Cache cargo
        uses: actions/cache@v3.3.2
        with:
          path: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git
            target
          key: espresso-sequencer-static-${{matrix.arch}}-v0-${{ hashFiles('Cargo.lock') }}

      - name: Fix Git Security Issue
        run: git config --global --add safe.directory "$PWD"

      - name: Compile all executables
        # timeout-minutes: 120
        run: |
          nix develop $DEVSHELL --accept-flake-config --option sandbox relaxed -c cargo build --release

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.TARGET }}-services
          path: |
            target/${{ env.TARGET }}/release/orchestrator
            target/${{ env.TARGET }}/release/web-server
            target/${{ env.TARGET }}/release/sequencer
            target/${{ env.TARGET }}/release/example-l2
            target/${{ env.TARGET }}/release/cli
            target/${{ env.TARGET }}/release/commitment-task

  static-dockers:
    runs-on: ubuntu-latest
    needs: static-build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download executables AMD
        uses: actions/download-artifact@v3
        with:
          name: x86_64-unknown-linux-musl-services
          path: target/amd64/release

      - name: Download executables ARM
        uses: actions/download-artifact@v3
        with:
          name: aarch64-unknown-linux-musl-services
          path: target/arm64/release

      - name: Setup Docker BuildKit (buildx)
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Container Repo
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate sequencer docker metadata
        uses: docker/metadata-action@v5
        id: sequencer
        with:
          images: ghcr.io/espressosystems/espresso-sequencer/sequencer

      - name: Generate web-server docker metadata
        uses: docker/metadata-action@v5
        id: web-server
        with:
          images: ghcr.io/espressosystems/espresso-sequencer/web-server

      - name: Generate orchestrator docker metadata
        uses: docker/metadata-action@v5
        id: orchestrator
        with:
          images: ghcr.io/espressosystems/espresso-sequencer/orchestrator

      - name: Generate commitment task docker metadata
        uses: docker/metadata-action@v5
        id: commitment-task
        with:
          images: ghcr.io/espressosystems/espresso-sequencer/commitment-task

      - name: Generate example rollup metadata
        uses: docker/metadata-action@v5
        id: example-rollup
        with:
          images: ghcr.io/espressosystems/espresso-sequencer/example-rollup

      - name: Build and push sequencer docker
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./docker/sequencer.Dockerfile
          platforms: linux/amd64,arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.sequencer.outputs.tags }}
          labels: ${{ steps.sequencer.outputs.labels }}

      - name: Build and push web-server docker
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./docker/web-server.Dockerfile
          platforms: linux/amd64,arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.web-server.outputs.tags }}
          labels: ${{ steps.web-server.outputs.labels }}

      - name: Build and push orchestrator docker
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./docker/orchestrator.Dockerfile
          platforms: linux/amd64,arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.orchestrator.outputs.tags }}
          labels: ${{ steps.orchestrator.outputs.labels }}

      - name: Build and push example-rollup docker
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./docker/example-rollup.Dockerfile
          platforms: linux/amd64,arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.example-rollup.outputs.tags }}
          labels: ${{ steps.example-rollup.outputs.labels }}

      - name: Build and push commitment-task docker
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./docker/commitment-task.Dockerfile
          platforms: linux/amd64,arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.commitment-task.outputs.tags }}
          labels: ${{ steps.commitment-task.outputs.labels }}
